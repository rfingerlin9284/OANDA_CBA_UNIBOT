import textwrap



from . import util


class TestModuleFilterPublicEntities(util.F2PyTest):
    sources = [
        util.getpath(
            "two_mods_with_one_public_routine.f90"
        )
    ]
    # we filter the only public function mod2
    only = ["mod1_func1", ]

        # if it compiles and can be loaded, things are fine
        pass


class TestModuleWithoutPublicEntities(util.F2PyTest):
    sources = [
        util.getpath(
            "two_mods_with_no_public_entities.f90"
        )
    ]
    only = ["mod1_func1", ]

        # if it compiles and can be loaded, things are fine
        pass


class TestModuleDocString(util.F2PyTest):

        assert self.module.mod.__doc__ == textwrap.dedent(
            """\
                     i : 'i'-scalar
                     x : 'i'-array(4)
                     a : 'f'-array(2,3)
                     b : 'f'-array(-1,-1), not allocated\x00
                     foo()\n
                     Wrapper for ``foo``.\n\n"""
        )


class TestModuleAndSubroutine(util.F2PyTest):
    module_name = "example"
    sources = [
    ]

        self.module.data.set_shift(3)
        assert "data" in dir(self.module)


class TestUsedModule(util.F2PyTest):
    module_name = "fmath"
    sources = [
    ]

        compiled_mods = [x for x in dir(self.module) if "__" not in x]
        assert "useops" in compiled_mods
        assert self.module.useops.sum_and_double(3, 7) == 20
        assert "mathops" in compiled_mods
        assert self.module.mathops.add(3, 7) == 10
