import random



    # use a 30 object pool for everything (duplicates will happen)
    pool = [object() for i in range(20)]
    keys_vals = []
    for i in range(length):
        keys = tuple(random.choices(pool, k=key_length))
        keys_vals.append((keys, random.choice(pool)))

    dictionary = dict(keys_vals)

    # add a random item at the end:
    keys_vals.append(random.choice(keys_vals))
    # the expected one could be different with duplicates:
    expected = dictionary[keys_vals[-1][0]]

    assert res is expected

    if length == 1:
        return

    # add a new item with a key that is already used and a new value, this
    # should error if replace is False, see gh-26690
    new_key = (keys_vals[1][0], object())
    keys_vals[0] = new_key
