from datetime import time
import locale

import numpy as np

from pandas.compat import PY311

from pandas import Series
from pandas.core.tools.times import to_time

# They pass, except when the machine locale is zh_CN or it_IT.
    locale.getlocale()[0] in ("zh_CN", "it_IT"),
    reason="fail on a CI build with LC_ALL=zh_CN.utf8/it_IT.utf8",
    strict=False,
)


class TestToTime:
        "time_string",
        [
            "14:15",
            "1415",
            "14:15:00",
            "141500",
            time(14, 15),
        ],
    )
        # GH#11818
        assert to_time(time_string) == time(14, 15)

        new_string = "14.15"
        msg = r"Cannot convert arg \['14\.15'\] to a time"
        if not PY311:
                to_time(new_string)
        assert to_time(new_string, format="%H.%M") == time(14, 15)

        arg = ["14:15", "20:20"]
        expected_arr = [time(14, 15), time(20, 20)]
        assert to_time(arg) == expected_arr
        assert to_time(arg, format="%H:%M") == expected_arr
        assert to_time(arg, infer_time_format=True) == expected_arr
        assert to_time(arg, format="%I:%M%p", errors="coerce") == [None, None]

        msg = "errors='ignore' is deprecated"
        with tm.assert_produces_warning(FutureWarning, match=msg):
            res = to_time(arg, format="%I:%M%p", errors="ignore")
        tm.assert_numpy_array_equal(res, np.array(arg, dtype=np.object_))

        msg = "Cannot convert.+to a time with given format"
            to_time(arg, format="%I:%M%p", errors="raise")

        tm.assert_series_equal(
        )

        res = to_time(np.array(arg))
        assert isinstance(res, list)
        assert res == expected_arr
