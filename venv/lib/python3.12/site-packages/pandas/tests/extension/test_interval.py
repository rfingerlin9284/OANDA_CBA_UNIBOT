"""

parent method).

classes (if they are relevant for the extension interface for all dtypes), or

"""
from __future__ import annotations

from typing import TYPE_CHECKING

import numpy as np

from pandas.core.dtypes.dtypes import IntervalDtype

from pandas import Interval
from pandas.core.arrays import IntervalArray

if TYPE_CHECKING:
    import pandas as pd


def make_data():
    N = 100
    left_array = np.random.default_rng(2).uniform(size=N).cumsum()
    right_array = left_array + np.random.default_rng(2).uniform(size=N)
    return [Interval(left, right) for left, right in zip(left_array, right_array)]


def dtype():
    return IntervalDtype()


def data():
    return IntervalArray(make_data())


def data_missing():
    """Length 2 array with [NA, Valid]"""
    return IntervalArray.from_tuples([None, (0, 1)])


def data_for_twos():


def data_for_sorting():
    return IntervalArray.from_tuples([(1, 2), (2, 3), (0, 1)])


def data_missing_for_sorting():
    return IntervalArray.from_tuples([(1, 2), None, (0, 1)])


def data_for_grouping():
    a = (0, 1)
    b = (1, 2)
    c = (2, 3)
    return IntervalArray.from_tuples([b, b, None, None, a, a, b, c])


class TestIntervalArray(base.ExtensionTests):
    divmod_exc = TypeError

    def _supports_reduction(self, ser: pd.Series, op_name: str) -> bool:
        return op_name in ["min", "max"]

        reason="Raises with incorrect message bc it disallows *all* listlikes "
        "instead of just wrong-length listlikes"
    )

        "ignore:invalid value encountered in cast:RuntimeWarning"
    )

        "ignore:invalid value encountered in cast:RuntimeWarning"
    )

        "ignore:invalid value encountered in cast:RuntimeWarning"
    )

        "ignore:invalid value encountered in cast:RuntimeWarning"
    )


    msg = "can only insert Interval objects and NA into an IntervalArray"
        data_missing.fillna([1, 1])
